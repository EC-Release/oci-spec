name: oci-spec-ci
on:
  push:
    branches: [ v1beta_oci_spec ]
  pull_request:
    branches: [ v1beta_oci_spec ]
    types: [opened, synchronize]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    environment: v1
    env:
      DOCKER_HUB_AGENT_TAG: "enterpriseconnect/agent:v1beta"
      DOCKER_HUB_PLUGIN_TAG: "enterpriseconnect/plugins:v1beta"
      DOCKER_HUB_LOADBALANCER_TAG: "enterpriseconnect/lb:v1beta"
    #- DOCKER_HUB_BUILD_TAG="enterpriseconnect/build:v1"
      GITHUB_AGENT_TAG: "ghcr.io/ec-release/agent:v1beta"
      GITHUB_PLUGIN_TAG: "ghcr.io/ec-release/plugins:v1beta"
      GITHUB_LOADBALANCER_TAG: "ghcr.io/ec-release/lb:v1beta"
    #- GITHUB_BUILD_TAG="docker.pkg.github.com/ec-release/oci/build:v1"
      GITHUB_REGISTRY: "https://ghcr.io"
      GITHUB_USR: "ayasuda-ge"
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Container Runtime Building
        env:
          EC_REV_V1BETA: v1beta.fukuoka.1728
        run: |
          cd ./spec/agent && docker build -t $DOCKER_HUB_AGENT_TAG --build-arg EC_REV_V1BETA=${EC_REV_V1BETA} . && cd -
          cd ./spec/plugin && docker build -t $DOCKER_HUB_PLUGIN_TAG --build-arg EC_REV_V1BETA=${EC_REV_V1BETA} . && cd -
          cd ./spec/loadbalancer && docker build -t $DOCKER_HUB_LOADBALANCER_TAG --build-arg EC_REV_V1BETA=${EC_REV_V1BETA} . && cd -
          
      - name: Container Test
        env:
          AGENT_REV: v1beta.fukuoka.1728
        run: |
          chmod +x ./scripts/docker-deployment-sim.sh
          ./scripts/docker-deployment-sim.sh
        
      - name: Container Images Deployment
        if: github.event_name == 'push'
        env:
          DOCKER_USERNAME: apoloyasudadocker
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          REGISTRY_TKN_GITHUB: ${{secrets.REGISTRY_TKN_GITHUB}}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push $DOCKER_HUB_AGENT_TAG
          docker push $DOCKER_HUB_PLUGIN_TAG
          docker push $DOCKER_HUB_LOADBALANCER_TAG
          docker tag $DOCKER_HUB_AGENT_TAG $GITHUB_AGENT_TAG
          docker tag $DOCKER_HUB_PLUGIN_TAG $GITHUB_PLUGIN_TAG
          docker tag $DOCKER_HUB_LOADBALANCER_TAG $GITHUB_LOADBALANCER_TAG
          echo $REGISTRY_TKN_GITHUB | docker login $GITHUB_REGISTRY -u $GITHUB_USR --password-stdin
          docker push $GITHUB_AGENT_TAG
          docker push $GITHUB_PLUGIN_TAG
          docker push $GITHUB_LOADBALANCER_TAG
